package kr.or.shi.review;

public class Object {


	/*
		1.	객체
			-	의사나 행위가 미치는 대상
			-	구체적, 추상적 데이터의 단위
				예) 사람, 자동차, 주문, 생산, 관리
		
		2.	객체 지향 프로그래밍(Object Oriented Programming: OOP)
			-	객체를 기반으로 하는 프로그래밍
			-	객체를 정의하고, 객체의 기능을 구현하며, 객체간의 협력(cooperation)을 구현
				cf. 절차 지향 프로그래밍(Procedural Programming)
				-시간이나 사건의 흐름에 따른 구현(C언어)

		3.	절차 지향 프로그래밍(실생활 예시)
			일어난다 -> 씻는다 -> 밥 먹는다 -> 버스 탄다 -> 요금 지불 -> 도착

			객체 지향 프로그래밍(예시)

			사람 --	 밥
			|탄다 
			|   간다		
			버스 --	sct
		
		4.	클래스(class)
			-	객체를 코드로 구현한 것
			-	객체 지향 프로그래밍의 가장 기본 요소
			-	객체의 blueprint(청사진)

		5.	멤버변수, 멤버 메소드
				멤버 변수
					-	객체가 가지는 속성을 변수로 표현
					-	클래스의 멤버 변수
					-	member variable, property, attribute, field
				메소드
					-	객체의 기능을 구현
					-	method, member function

		6. 	인스턴스
			-	클래스로 부터 생성된 객체
			-	힙 메모리에 멤버 변수의 크기에 따라 메모리가 생성
			-	new 키워드를 이용하여 여러 개의 인스턴스를 생성

		7.	용어정리
			객체: 		객체 지향 프로그래밍의 대상, 생성된 인스턴스
			클래스: 	객체를 프로그래밍 하기 위해 코드로 만든 상태
			인스턴스:	클래스가 메모리에 생성된 형태
			멤버 변수:	클래스의 속성, 특성
			메소드:		멤버 변수를 이용하여 클래스의 기능을 구현
			참조 변수:	메모리에 생성된 인스턴스를 가리키는 변수
			참조 값:	생성된 인스턴스의 메모리 주소 값
		

	*/
	public static void main(String[] args) {
		
	}

}
